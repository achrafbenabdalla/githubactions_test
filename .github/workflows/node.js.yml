name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        run: |
          docker run -d -p 9000:9000 --name sonarqube-container sonarqube:latest
          sleep 60 # Wait for SonarQube to start

      - name: Check SonarQube logs
        run: docker logs sonarqube-container

      - name: Install ngrok via Docker
        run: |
          docker pull ngrok/ngrok
          docker run --net=host -d --name ngrok-container -e NGROK_AUTHTOKEN=${{ secrets.NGROK_AUTH_TOKEN }} ngrok/ngrok:latest http 9000
          sleep 10 # Wait for ngrok to start

      - name: Check running containers
        run: docker ps

      - name: Log ngrok container
        run: docker logs ngrok-container

      - name: Get ngrok URL
        run: |
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r .tunnels[0].public_url > ngrok_url.txt

      - name: Print ngrok URL
        run: cat ngrok_url.txt

      - name: Verify ngrok tunnel
        run: |
          NGROK_URL=$(cat ngrok_url.txt)
          echo "Verifying ngrok tunnel at $NGROK_URL"
          curl -s -I $NGROK_URL | head -n 10

      - name: Check SonarQube status via ngrok
        run: |
          NGROK_URL=$(cat ngrok_url.txt)
          echo "Checking SonarQube status at $NGROK_URL"
          curl -s -I "$NGROK_URL/api/system/status" | head -n 10

      - name: Test access to SonarQube via ngrok
        run: |
          NGROK_URL=$(cat ngrok_url.txt)
          echo "Testing access to SonarQube via $NGROK_URL"
          curl -s "$NGROK_URL/api/system/status" | jq .
