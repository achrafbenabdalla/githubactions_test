name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

  sonar:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      run: |
        docker run -d -p 9000:9000 sonarqube:latest
        sleep 30 # Wait for SonarQube to start

    - name: Download ngrok
      run: |
        curl -s https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip -o ngrok.zip
        unzip ngrok.zip
        sudo mv ngrok /usr/local/bin

    - name: Authenticate ngrok (securely using secrets)
      run: ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Start ngrok (background process and log capture)
      run: |
        ngrok http 9000 --log=stdout > ngrok.log &
        sleep 10

    - name: Get ngrok URL (simplified with error handling)
      run: |
        curl -s http://127.0.0.1:4040/api/tunnels | jq -r .tunnels[0].public_url > ngrok_url.txt

    - name: Print ngrok URL
      run: cat ngrok_url.txt










    # Optional: Debug ngrok log (comment out if not needed)
    # - name: Debug ngrok log
    #   run: cat ngrok.log
